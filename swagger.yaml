openapi: 3.0.0
info:
  title: E-commerce REST API
  version: 1.0.0
  description: A REST API for an e-commerce platform.
servers:
  - url: http://localhost:5000/api
    description: Local server

paths:
  /users/register:
    post:
      summary: Register a new user
      tags: [Users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - password
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Invalid input

  /users/login:
    post:
      summary: Login a user
      tags: [Users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User logged in successfully
        '400':
          description: Invalid input

  /users/profile:
    get:
      summary: Get user profile
      tags: [Users]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile retrieved successfully
        '401':
          description: Unauthorized

  /products:
    post:
      summary: Create a new product
      tags: [Products]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - name
                - description
                - price
                - stock
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: number
                stock:
                  type: integer
                image:
                  type: string
                  format: binary
      responses:
        '201':
          description: Product created successfully
        '400':
          description: Invalid input

    get:
      summary: Get all products
      tags: [Products]
      responses:
        '200':
          description: Products retrieved successfully

  /products/{id}:
    get:
      summary: Get a single product by ID
      tags: [Products]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Product retrieved successfully
        '404':
          description: Product not found

    put:
      summary: Update a product by ID
      tags: [Products]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: number
                stock:
                  type: integer
                image:
                  type: string
                  format: binary
      responses:
        '200':
          description: Product updated successfully
        '400':
          description: Invalid input
        '404':
          description: Product not found

    delete:
      summary: Delete a product by ID
      tags: [Products]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Product deleted successfully
        '404':
          description: Product not found

  /orders:
    post:
      summary: Create a new order
      tags: [Orders]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - products
                - totalPrice
              properties:
                products:
                  type: array
                  items:
                    type: object
                    properties:
                      productId:
                        type: string
                      quantity:
                        type: integer
                totalPrice:
                  type: number
      responses:
        '201':
          description: Order created successfully
        '400':
          description: Invalid input

    get:
      summary: Get all orders
      tags: [Orders]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Orders retrieved successfully

  /orders/{id}:
    get:
      summary: Get a single order by ID
      tags: [Orders]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Order retrieved successfully
        '404':
          description: Order not found

    put:
      summary: Update order status by ID
      tags: [Orders]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - status
              properties:
                status:
                  type: string
      responses:
        '200':
          description: Order status updated successfully
        '400':
          description: Invalid input
        '404':
          description: Order not found

  /cart:
    post:
      summary: Add product to cart
      tags: [Cart]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - productId
                - quantity
              properties:
                productId:
                  type: string
                quantity:
                  type: integer
      responses:
        '201':
          description: Product added to cart
        '400':
          description: Invalid input

    get:
      summary: Get cart items
      tags: [Cart]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Cart items retrieved successfully

    delete:
      summary: Clear cart
      tags: [Cart]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Cart cleared successfully

  /cart/{id}:
    put:
      summary: Update cart item quantity
      tags: [Cart]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - quantity
              properties:
                quantity:
                  type: integer
      responses:
        '200':
          description: Cart item updated successfully
        '400':
          description: Invalid input
        '404':
          description: Cart item not found

    delete:
      summary: Delete cart item
      tags: [Cart]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Cart item deleted successfully
        '404':
          description: Cart item not found

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
    Product:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        price:
          type: number
        stock:
          type: integer
    Order:
      type: object
      properties:
        id:
          type: string
        products:
          type: array
          items:
            type: object
            properties:
              productId:
                type: string
              quantity:
                type: integer
        totalPrice:
          type: number
        status:
          type: string
    CartItem:
      type: object
      properties:
        id:
          type: string
        productId:
          type: string
        quantity:
          type: integer